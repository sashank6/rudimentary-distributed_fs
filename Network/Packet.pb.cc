// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SystemInformation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemInformation_reflection_ = NULL;
const ::google::protobuf::Descriptor* Packet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Packet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Packet_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Packet_2eproto() {
  protobuf_AddDesc_Packet_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Packet.proto");
  GOOGLE_CHECK(file != NULL);
  SystemInformation_descriptor_ = file->message_type(0);
  static const int SystemInformation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInformation, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInformation, filesize_),
  };
  SystemInformation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SystemInformation_descriptor_,
      SystemInformation::internal_default_instance(),
      SystemInformation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInformation, _has_bits_),
      -1,
      -1,
      sizeof(SystemInformation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemInformation, _internal_metadata_));
  Packet_descriptor_ = file->message_type(1);
  static const int Packet_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, sysinfo_),
  };
  Packet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Packet_descriptor_,
      Packet::internal_default_instance(),
      Packet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, _has_bits_),
      -1,
      -1,
      sizeof(Packet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Packet_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SystemInformation_descriptor_, SystemInformation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Packet_descriptor_, Packet::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Packet_2eproto() {
  SystemInformation_default_instance_.Shutdown();
  delete SystemInformation_reflection_;
  Packet_default_instance_.Shutdown();
  delete Packet_reflection_;
}

void protobuf_InitDefaults_Packet_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  SystemInformation_default_instance_.DefaultConstruct();
  Packet_default_instance_.DefaultConstruct();
  SystemInformation_default_instance_.get_mutable()->InitAsDefaultInstance();
  Packet_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Packet_2eproto_once_);
void protobuf_InitDefaults_Packet_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Packet_2eproto_once_,
                 &protobuf_InitDefaults_Packet_2eproto_impl);
}
void protobuf_AddDesc_Packet_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Packet_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Packet.proto\"3\n\021SystemInformation\022\014\n\004p"
    "ort\030\001 \002(\005\022\020\n\010filesize\030\002 \002(\005\";\n\006Packet\022\014\n"
    "\004FLAG\030\001 \002(\005\022#\n\007sysinfo\030\002 \001(\0132\022.SystemInf"
    "ormation", 128);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Packet.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Packet_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Packet_2eproto_once_);
void protobuf_AddDesc_Packet_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Packet_2eproto_once_,
                 &protobuf_AddDesc_Packet_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Packet_2eproto {
  StaticDescriptorInitializer_Packet_2eproto() {
    protobuf_AddDesc_Packet_2eproto();
  }
} static_descriptor_initializer_Packet_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemInformation::kPortFieldNumber;
const int SystemInformation::kFilesizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemInformation::SystemInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Packet_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:SystemInformation)
}

void SystemInformation::InitAsDefaultInstance() {
}

SystemInformation::SystemInformation(const SystemInformation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SystemInformation)
}

void SystemInformation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&port_, 0, reinterpret_cast<char*>(&filesize_) -
    reinterpret_cast<char*>(&port_) + sizeof(filesize_));
}

SystemInformation::~SystemInformation() {
  // @@protoc_insertion_point(destructor:SystemInformation)
  SharedDtor();
}

void SystemInformation::SharedDtor() {
}

void SystemInformation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemInformation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemInformation_descriptor_;
}

const SystemInformation& SystemInformation::default_instance() {
  protobuf_InitDefaults_Packet_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SystemInformation> SystemInformation_default_instance_;

SystemInformation* SystemInformation::New(::google::protobuf::Arena* arena) const {
  SystemInformation* n = new SystemInformation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:SystemInformation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SystemInformation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SystemInformation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(port_, filesize_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SystemInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SystemInformation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 port = 1;
      case 1: {
        if (tag == 8) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_filesize;
        break;
      }

      // required int32 filesize = 2;
      case 2: {
        if (tag == 16) {
         parse_filesize:
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SystemInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SystemInformation)
  return false;
#undef DO_
}

void SystemInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SystemInformation)
  // required int32 port = 1;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->port(), output);
  }

  // required int32 filesize = 2;
  if (has_filesize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->filesize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SystemInformation)
}

::google::protobuf::uint8* SystemInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SystemInformation)
  // required int32 port = 1;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->port(), target);
  }

  // required int32 filesize = 2;
  if (has_filesize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->filesize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SystemInformation)
  return target;
}

size_t SystemInformation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SystemInformation)
  size_t total_size = 0;

  if (has_port()) {
    // required int32 port = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  if (has_filesize()) {
    // required int32 filesize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filesize());
  }

  return total_size;
}
size_t SystemInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SystemInformation)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 port = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());

    // required int32 filesize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filesize());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SystemInformation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SystemInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SystemInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SystemInformation)
    UnsafeMergeFrom(*source);
  }
}

void SystemInformation::MergeFrom(const SystemInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SystemInformation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SystemInformation::UnsafeMergeFrom(const SystemInformation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_filesize()) {
      set_filesize(from.filesize());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SystemInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SystemInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInformation::CopyFrom(const SystemInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SystemInformation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SystemInformation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SystemInformation::Swap(SystemInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemInformation::InternalSwap(SystemInformation* other) {
  std::swap(port_, other->port_);
  std::swap(filesize_, other->filesize_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemInformation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemInformation_descriptor_;
  metadata.reflection = SystemInformation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemInformation

// required int32 port = 1;
bool SystemInformation::has_port() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SystemInformation::set_has_port() {
  _has_bits_[0] |= 0x00000001u;
}
void SystemInformation::clear_has_port() {
  _has_bits_[0] &= ~0x00000001u;
}
void SystemInformation::clear_port() {
  port_ = 0;
  clear_has_port();
}
::google::protobuf::int32 SystemInformation::port() const {
  // @@protoc_insertion_point(field_get:SystemInformation.port)
  return port_;
}
void SystemInformation::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:SystemInformation.port)
}

// required int32 filesize = 2;
bool SystemInformation::has_filesize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SystemInformation::set_has_filesize() {
  _has_bits_[0] |= 0x00000002u;
}
void SystemInformation::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000002u;
}
void SystemInformation::clear_filesize() {
  filesize_ = 0;
  clear_has_filesize();
}
::google::protobuf::int32 SystemInformation::filesize() const {
  // @@protoc_insertion_point(field_get:SystemInformation.filesize)
  return filesize_;
}
void SystemInformation::set_filesize(::google::protobuf::int32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:SystemInformation.filesize)
}

inline const SystemInformation* SystemInformation::internal_default_instance() {
  return &SystemInformation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Packet::kFLAGFieldNumber;
const int Packet::kSysinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Packet::Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Packet_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet)
}

void Packet::InitAsDefaultInstance() {
  sysinfo_ = const_cast< ::SystemInformation*>(
      ::SystemInformation::internal_default_instance());
}

Packet::Packet(const Packet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Packet)
}

void Packet::SharedCtor() {
  _cached_size_ = 0;
  sysinfo_ = NULL;
  flag_ = 0;
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:Packet)
  SharedDtor();
}

void Packet::SharedDtor() {
  if (this != &Packet_default_instance_.get()) {
    delete sysinfo_;
  }
}

void Packet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Packet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Packet_descriptor_;
}

const Packet& Packet::default_instance() {
  protobuf_InitDefaults_Packet_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Packet> Packet_default_instance_;

Packet* Packet::New(::google::protobuf::Arena* arena) const {
  Packet* n = new Packet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:Packet)
  if (_has_bits_[0 / 32] & 3u) {
    flag_ = 0;
    if (has_sysinfo()) {
      if (sysinfo_ != NULL) sysinfo_->::SystemInformation::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 FLAG = 1;
      case 1: {
        if (tag == 8) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sysinfo;
        break;
      }

      // optional .SystemInformation sysinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_sysinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sysinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet)
  return false;
#undef DO_
}

void Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet)
  // required int32 FLAG = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  // optional .SystemInformation sysinfo = 2;
  if (has_sysinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sysinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Packet)
}

::google::protobuf::uint8* Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Packet)
  // required int32 FLAG = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  // optional .SystemInformation sysinfo = 2;
  if (has_sysinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->sysinfo_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet)
  return target;
}

size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Packet)
  size_t total_size = 0;

  // required int32 FLAG = 1;
  if (has_flag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }
  // optional .SystemInformation sysinfo = 2;
  if (has_sysinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sysinfo_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Packet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Packet)
    UnsafeMergeFrom(*source);
  }
}

void Packet::MergeFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Packet)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Packet::UnsafeMergeFrom(const Packet& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_sysinfo()) {
      mutable_sysinfo()->::SystemInformation::MergeFrom(from.sysinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Packet)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Packet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_sysinfo()) {
    if (!this->sysinfo_->IsInitialized()) return false;
  }
  return true;
}

void Packet::Swap(Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Packet::InternalSwap(Packet* other) {
  std::swap(flag_, other->flag_);
  std::swap(sysinfo_, other->sysinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Packet_descriptor_;
  metadata.reflection = Packet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Packet

// required int32 FLAG = 1;
bool Packet::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Packet::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
void Packet::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
void Packet::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
::google::protobuf::int32 Packet::flag() const {
  // @@protoc_insertion_point(field_get:Packet.FLAG)
  return flag_;
}
void Packet::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:Packet.FLAG)
}

// optional .SystemInformation sysinfo = 2;
bool Packet::has_sysinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Packet::set_has_sysinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void Packet::clear_has_sysinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void Packet::clear_sysinfo() {
  if (sysinfo_ != NULL) sysinfo_->::SystemInformation::Clear();
  clear_has_sysinfo();
}
const ::SystemInformation& Packet::sysinfo() const {
  // @@protoc_insertion_point(field_get:Packet.sysinfo)
  return sysinfo_ != NULL ? *sysinfo_
                         : *::SystemInformation::internal_default_instance();
}
::SystemInformation* Packet::mutable_sysinfo() {
  set_has_sysinfo();
  if (sysinfo_ == NULL) {
    sysinfo_ = new ::SystemInformation;
  }
  // @@protoc_insertion_point(field_mutable:Packet.sysinfo)
  return sysinfo_;
}
::SystemInformation* Packet::release_sysinfo() {
  // @@protoc_insertion_point(field_release:Packet.sysinfo)
  clear_has_sysinfo();
  ::SystemInformation* temp = sysinfo_;
  sysinfo_ = NULL;
  return temp;
}
void Packet::set_allocated_sysinfo(::SystemInformation* sysinfo) {
  delete sysinfo_;
  sysinfo_ = sysinfo;
  if (sysinfo) {
    set_has_sysinfo();
  } else {
    clear_has_sysinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.sysinfo)
}

inline const Packet* Packet::internal_default_instance() {
  return &Packet_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
